{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cars/components/add-car/add-car.component.css","webpack:///./src/app/cars/components/add-car/add-car.component.html","webpack:///./src/app/cars/components/add-car/add-car.component.ts","webpack:///./src/app/cars/components/cars/cars.component.css","webpack:///./src/app/cars/components/cars/cars.component.html","webpack:///./src/app/cars/components/cars/cars.component.ts","webpack:///./src/app/cars/filters/car-make-filter.pipe.ts","webpack:///./src/app/cars/models/car.model.ts","webpack:///./src/app/cars/models/color.model.ts","webpack:///./src/app/cars/services/cars.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <mat-toolbar>\\n    <mat-toolbar-row>\\n      <a mat-tab-link routerLink=\\\"/cars\\\" routerLinkActive=\\\"active\\\">Cars</a>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: '/app.component.html',\n})\n\nexport class AppComponent {\n  title = 'Home';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatButtonModule,\n  MatCheckboxModule,\n  MatInputModule,\n  MatMenuModule, MatNativeDateModule,\n  MatRadioModule,\n  MatRippleModule, MatSelectModule, MatTableModule\n} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\n\n\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CarMakeFilterPipe } from './cars/filters/car-make-filter.pipe';\nimport { CarsComponent } from './cars/components/cars/cars.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { AddCarComponent } from './cars/components/add-car/add-car.component';\nimport {HttpClientModule} from '@angular/common/http';\n\nconst appRoutes: Routes = [\n  { path: 'cars', component: CarsComponent },\n  { path: '', redirectTo: '/cars', pathMatch: 'full' },\n  { path: 'cars/create', component: AddCarComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent, CarMakeFilterPipe, CarsComponent, AddCarComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatInputModule,\n    MatRippleModule,\n    MatToolbarModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".flex-column {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-width: 600px;\\r\\n  padding-top: 20px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.margin-right {\\r\\n  margin-right: 1em;\\r\\n}\\r\\n\"","module.exports = \"<form class=\\\"flex-column container-fluid\\\" [formGroup]=\\\"addingForm\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Make\\\"\\n             name=\\\"carMake\\\" formControlName=\\\"makeControl\\\" required>\\n      <mat-error *ngIf=\\\"addingForm.invalid\\\">\\n        {{getErrorMessage('makeControl')}}\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [max]=\\\"today\\\" [matDatepicker]=\\\"carDate\\\" formControlName=\\\"dateControl\\\"\\n             placeholder=\\\"Date of manufacture\\\" required name=\\\"manufactureDate\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"carDate\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #carDate disabled=\\\"false\\\"></mat-datepicker>\\n      <mat-error *ngIf=\\\"addingForm.invalid\\\">\\n        {{getErrorMessage('dateControl')}}\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"mileageControl\\\" placeholder=\\\"Mileage\\\" name=\\\"carMileage\\\"\\n             required>\\n      <mat-error *ngIf=\\\"addingForm.invalid\\\">\\n        {{getErrorMessage('mileageControl')}}\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Car color\\\" formControlName=\\\"colorControl\\\"\\n                  name=\\\"carColor\\\" required>\\n        <mat-option *ngFor=\\\"let color of colors.values()\\\" [value]=\\\"color\\\">\\n          {{color}}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error *ngIf=\\\"addingForm.invalid\\\">\\n        {{getErrorMessage('colorControl')}}\\n      </mat-error>\\n    </mat-form-field>\\n  <div>\\n    <mat-label class=\\\"margin-right\\\">Car is for sale</mat-label>\\n    <mat-checkbox  formControlName=\\\"forSaleControl\\\" title=\\\"For sale\\\" name=\\\"carForSale\\\"></mat-checkbox>\\n  </div>\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"saveCar()\\\" class=\\\"btn-left half-width\\\"\\n          [disabled]=\\\"addingForm.invalid\\\">Save</button>\\n  <button mat-button color=\\\"warn\\\" routerLink=\\\"/cars\\\" class=\\\"half-width\\\">Cancel</button>\\n</form>\\n<div align=\\\"center\\\">\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CarModel} from '../../models/car.model';\nimport {Color} from '../../models/color.model';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {CarsService} from '../../services/cars.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-add-car',\n  templateUrl: './add-car.component.html',\n  styleUrls: ['./add-car.component.css']\n})\nexport class AddCarComponent implements OnInit {\n\n  colors = Color;\n  today = new Date(Date.now());\n  addingForm: any;\n\n  constructor(private fb: FormBuilder, private service: CarsService, private router: Router) {\n    this.addingForm = this.fb.group({\n      makeControl: [null, [Validators.required]],\n      dateControl: [null, [Validators.required]],\n      mileageControl: [null, [Validators.required, Validators.min(0), Validators.pattern('([0-9]*\\.[0-9]+|[0-9]+)')]],\n      colorControl: [null, [Validators.required]],\n      forSaleControl: [null]\n  });\n  }\n\n  ngOnInit() {\n  }\n\n  saveCar() {\n    this.service.createCar(this.parseCar());\n    return this.router.navigate(['']);\n  }\n\n  parseCar() {\n    return new CarModel(0,\n      this.addingForm.get('makeControl').value,\n      this.addingForm.get('mileageControl').value,\n      this.addingForm.get('dateControl').value,\n      this.addingForm.get('colorControl').value,\n      this.addingForm.get('forSaleControl').value);\n  }\n\n  getErrorMessage(control) {\n    let errorMessage: String = null;\n    switch (control) {\n      case 'makeControl': errorMessage = 'Make control is required'; break;\n      case 'dateControl': errorMessage = 'Manufacture date is required'; break;\n      case 'mileageControl': errorMessage = 'Mileage is required. It must be a number and must be bigger than 0'; break;\n      case 'colorControl': errorMessage = 'Color is required'; break;\n    }\n    if (this.addingForm.get(control).invalid) {\n      return errorMessage;\n    }\n  }\n}\n","module.exports = \".btn-left {\\n  float: left\\n}\\n\\n.half-width {\\n  width: 50%\\n}\\n\\n.full-height {\\n  height: 100%\\n}\\n\\ntable {\\n  width: 100%;\\n  margin-top: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.padding-top {\\n  padding-top: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <mat-form-field class=\\\"padding-top\\\">\\n    <input matInput [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Type filter\\\" />\\n  </mat-form-field>\\n  <br />\\n  <div class=\\\"mat-radio-container\\\">\\n    <mat-radio-group [(ngModel)]=\\\"ignoreTextCase\\\" name=\\\"case\\\">Case:\\n      <mat-radio-button name=\\\"mat-radio-case-ignore\\\" [value]=\\\"true\\\" aria-label=\\\"Ignore\\\" [checked]=\\\"ignoreTextCase === true\\\">\\n        Ignore\\n      </mat-radio-button>\\n      <mat-radio-button name=\\\"mat-radio-case-sensitive\\\" [value]=\\\"false\\\" aria-label=\\\"Sensitive\\\">\\n        Sensitive\\n      </mat-radio-button>\\n    </mat-radio-group>\\n  </div>\\n</div>\\n\\n<table mat-table [dataSource]=\\\"cars | markFilter : searchText : ignoreTextCase\\\" class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"make\\\">\\n    <th mat-header-cell *matHeaderCellDef> Make </th>\\n    <td mat-cell *matCellDef=\\\"let car\\\"> {{car.make}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <th mat-header-cell *matHeaderCellDef> Manufacture date </th>\\n    <td mat-cell *matCellDef=\\\"let car\\\"> {{car.manufactureDate | date: \\\"MMMM dd yyyy\\\"}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"mileage\\\">\\n    <th mat-header-cell *matHeaderCellDef> Mileage </th>\\n    <td mat-cell *matCellDef=\\\"let car\\\"> {{car.mileage}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"color\\\">\\n    <th mat-header-cell *matHeaderCellDef> Color </th>\\n    <td mat-cell *matCellDef=\\\"let car\\\"> {{car.color}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"forSale\\\">\\n    <th mat-header-cell *matHeaderCellDef> Is for sale </th>\\n    <td mat-cell *matCellDef=\\\"let car\\\"><mat-checkbox [checked]=\\\"car.forSale\\\" [disabled]=\\\"true\\\"></mat-checkbox></td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"delBtns\\\">\\n    <th mat-header-cell *matHeaderCellDef></th>\\n    <td mat-cell *matCellDef=\\\"let car\\\" ><button mat-button color=\\\"warn\\\" class=\\\"btn-block\\\" (click)=\\\"deleteCar(car)\\\">Delete</button></td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<button mat-button class=\\\"btn btn-block\\\" color=\\\"primary\\\" routerLink=\\\"/cars/create\\\">Add car</button>\\n\\n\"","import {CarModel} from '../../models/car.model';\nimport {Component, OnInit } from '@angular/core';\nimport {CarsService} from '../../services/cars.service';\n\n@Component({\n  selector: 'app-cars',\n  templateUrl: './cars.component.html',\n  styleUrls: ['./cars.component.css'],\n  providers: [CarsService]\n})\n\nexport class CarsComponent implements OnInit {\n  displayedColumns: string[] = ['make', 'date', 'mileage', 'color', 'forSale', 'delBtns'];\n  cars: Array<CarModel> = [];\n  ignoreTextCase = true;\n\n  constructor(private service: CarsService) {\n  }\n\n  ngOnInit() {\n    this.loadCars();\n  }\n\n  deleteCar(car: CarModel) {\n    if (confirm('Are you sure you want to delete this car?')) {\n      this.service.deleteCar(car);\n    }\n    this.loadCars();\n  }\n\n  private loadCars() {\n    this.service.getCars().subscribe((data) => this.cars = data);\n  }\n}\n\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {CarModel} from '../models/car.model';\n\n@Pipe({\n  name: 'markFilter'\n})\n\nexport class CarMakeFilterPipe implements PipeTransform {\n  private make: string;\n  transform(cars: CarModel[], searchText: string, ignoreCase: boolean): any[] {\n    if (!cars) { return []; }\n    if (!searchText) { return cars; }\n\n    return cars.filter( car => {\n      this.make = car.make;\n      if (ignoreCase) {\n        searchText = searchText.toLowerCase();\n        this.make = this.make.toLowerCase();\n      }\n      return this.make.includes(searchText);\n    });\n  }\n}\n","import {Color} from './color.model';\n\nexport class CarModel {\n\n  constructor(public id: number,\n              public make: string,\n              public mileage: number,\n              public manufactureDate: Date,\n              public color: Color,\n              public forSale: boolean) {\n\n  }\n\n}\n","export enum Color {\n  Red = 'Red',\n  Green = 'Green',\n  Blue = 'Blue',\n  White = 'White',\n  Black = 'Black',\n  Yellow = 'Yellow',\n  Orange = 'Orange',\n}\n\nexport namespace Color {\n\n  export function values() {\n    return Object.keys(Color).filter(\n      (type) => isNaN(<any>type) && type !== 'values'\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CarModel} from '../models/car.model';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarsService {\n\n  private headers = new HttpHeaders();\n  private cars: Array<CarModel> = [];\n  private url = 'http://localhost:8080/api/cars';\n\n  constructor(private http: HttpClient) {\n    this.headers.append('Content-Type', 'application/json');\n  }\n\n  getCars() {\n    return this.http.get<CarModel[]>(this.url, {\n      headers: this.headers\n    });\n  }\n\n  createCar(car: CarModel) {\n    this.http.post<CarModel>(this.url, car, { headers: this.headers }).subscribe();\n    this.getCars();\n  }\n\n  deleteCar(car: CarModel) {\n    const urlParams = new HttpParams().set('id', car.id.toString());\n    console.log(car.id);\n    this.http.delete(this.url, { params: urlParams }).subscribe();\n    this.getCars();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}